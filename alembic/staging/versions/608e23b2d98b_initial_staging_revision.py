"""initial staging revision

Revision ID: 608e23b2d98b
Revises: 
Create Date: 2025-06-16 02:15:55.285374

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '608e23b2d98b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('HIGH', 'MEDIUM', 'LOW', 'NONE', name='bikeavailability').create(op.get_bind())
    sa.Enum('PASSENGER', 'DRIVER', name='userrole').create(op.get_bind())
    op.create_table('usersession',
    sa.Column('role', postgresql.ENUM('PASSENGER', 'DRIVER', name='userrole', create_type=False), nullable=False),
    sa.Column('emergency_contact', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usersession_session_token'), 'usersession', ['session_token'], unique=True)
    op.create_table('emergencyalert',
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('alert_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('sms_sent', sa.Boolean(), nullable=False),
    sa.Column('authorities_notified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['usersession.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locationupdate',
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('bike_availability', postgresql.ENUM('HIGH', 'MEDIUM', 'LOW', 'NONE', name='bikeavailability', create_type=False), nullable=True),
    sa.Column('location_context', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['usersession.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('locationupdate')
    op.drop_table('emergencyalert')
    op.drop_index(op.f('ix_usersession_session_token'), table_name='usersession')
    op.drop_table('usersession')
    sa.Enum('PASSENGER', 'DRIVER', name='userrole').drop(op.get_bind())
    sa.Enum('HIGH', 'MEDIUM', 'LOW', 'NONE', name='bikeavailability').drop(op.get_bind())
    # ### end Alembic commands ###
